"""
Represents a media item in the system.
"""
type MediaItem {
  media_id: ID!
  user_id: ID!
  filename: String!
  thumbnail: String!
  filesize: Int!
  media_type: String!
  title: String!
  description: String
  created_at: String!
  tags: [Tag]
  owner: User
}

"""
Response object for messages.
"""
type MessageResponse {
  message: String!
}

"""
Represents a like on a media item.
"""
type Like {
  like_id: ID
  media_id: ID
  user_id: ID
  created_at: String
}

"""
Response object for media operations.
"""
type MediaResponse {
  message: String!
  media: MediaItem!
}

"""
Input for creating a new media item.
"""
input MediaItemInput {
  filename: String!
  filesize: Int!
  media_type: String!
  title: String!
  description: String
}

"""
Input for updating a media item.
"""
input MediaItemUpdateInput {
  title: String!
  description: String
}

"""
Input for adding a tag to a media item.
"""
input AddTagToMediaItemInput {
  media_id: ID!
  tag_name: String!
}

"""
Input for liking a media item.
"""
input LikeInput {
  media_id: ID!
}

"""
Represents a count object.
"""
type Count {
  count: Int
}

"""
Input for posting a comment on a media item.
"""
input CommentInput {
  media_id: ID!
  comment_text: String!
}

"""
Represents a comment on a media item.
"""
type Comment {
  comment_id: ID
  media_id: ID
  user_id: ID
  comment_text: String
  created_at: String
}

"""
Root Query type.
"""
type Query {
  mediaItems: [MediaItem]
  mediaItem(media_id: ID!): MediaItem
  mediaItemsByTag(tag: String!): [MediaItem]
  todaysMediaItems: [MediaItem]
  myMedias: [MediaItem]
  oneFriendsMediaItems(friend_id: ID!): [MediaItem]
  getUserLike(media_id: ID!): Like
  getCountByMediaId(media_id: ID!): Count
  getCommentsByMediaId(media_id: ID!): [Comment]
}

"""
Root Mutation type.
"""
type Mutation {
  createMediaItem(input: MediaItemInput!): MediaItem
  addTagToMediaItem(input: AddTagToMediaItemInput!): MediaItem
  updateMediaItem(input: MediaItemUpdateInput!, media_id: ID!): MediaResponse
  postLike(media_id: ID!): MessageResponse
  deleteLike(media_id: ID!): MessageResponse
  postComment(input: CommentInput!): MessageResponse
}
